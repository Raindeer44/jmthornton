'use strict';const sh=require('shelljs'),fs=require('fs'),path=require('path'),dirs=['.','blog','blog/p','p','projects','tools','tools/news','gallery'],build=()=>{checkDeps(),compileSass(),compileJS(),doBeautify()},checkDeps=()=>{sh.which('sass')||sh.exit(1),sh.which('node_modules/purify-css/bin/purifycss')||sh.exit(1)},compileSass=()=>{sh.exec('sass assets/style/main.scss assets/style/main.css')},doBeautify=()=>{prepStyle(),purifyStyle().then(()=>{removeTmp()},()=>{removeTmp()})},prepStyle=()=>{sh.mkdir('tmp'),sh.mv('assets/style/main.css','tmp/m.css')},purifyStyle=async()=>{const a=await getHtmlFiles(),b=`node_modules/purify-css/bin/purifycss --min --info --out assets/style/main.css tmp/m.css ${a}`;sh.exec(b)},getHtmlFiles=async()=>{let a,b=[];for(let c of dirs)a=await getFiles(c),a=a.filter((a)=>'.html'===path.extname(a)).map((a)=>`${c}/${a}`),b.push(a);return stringifySpaces(b)},getFiles=(a)=>new Promise((b,c)=>{fs.readdir(a,(a,d)=>{a?c(a):b(d)})}),stringifySpaces=(a)=>{let b='',c=0;for(;c<a.length;){const d=a[c];b+=Array.isArray(d)?`${stringifySpaces(d)} `:`${d} `,c++}return b},removeTmp=()=>{sh.rm('-rf','./tmp')},compileJS=()=>{sh.exec('babel assets/script/src/ -d assets/script/lib/'),sh.exec('babel tools/news/assets/script/src -d tools/news/assets/script/lib')};module.exports=build,build();